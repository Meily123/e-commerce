definitions:
  CartEditRequest:
    properties:
      quantity:
        type: integer
    required:
    - quantity
    type: object
  CartRequest:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  CartResponse:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    type: object
  ErrorResponse:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  LoginSuccessResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      token:
        type: string
    type: object
  ProductEditRequest:
    properties:
      base_price:
        type: integer
      description:
        type: string
      name:
        type: string
      sell_price:
        type: integer
      stock:
        type: integer
    required:
    - base_price
    - name
    - sell_price
    - stock
    type: object
  ProductRequest:
    properties:
      base_price:
        type: integer
      description:
        type: string
      name:
        type: string
      sell_price:
        type: integer
      stock:
        type: integer
    required:
    - base_price
    - name
    - sell_price
    - stock
    type: object
  ProductResponse:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
    type: object
  SuccessUserResponse:
    type: object
  UserEditRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  UserRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - address
    - email
    - name
    - password
    - username
    type: object
  UserResponse:
    properties:
      address:
        type: string
      email:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      name:
        type: string
      username:
        type: string
    type: object
  model.CartProduct:
    properties:
      id:
        type: string
      item:
        $ref: '#/definitions/model.Product'
      itemId:
        type: string
      quantity:
        type: integer
      userId:
        type: string
    type: object
  model.Product:
    properties:
      base_price:
        type: integer
      created_at:
        type: integer
      descriptions:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      sell_price:
        type: integer
      stock:
        type: integer
      updated_at:
        type: integer
    type: object
  model.TransactionProduct:
    properties:
      id:
        type: string
      item:
        $ref: '#/definitions/model.Product'
      item_id:
        type: string
      margin:
        type: integer
      quantity:
        type: integer
      sum:
        type: integer
      transaction_id:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /cart:
    get:
      description: Get all carts data
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/CartResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all carts
      tags:
      - Cart
    post:
      consumes:
      - application/json
      description: Create New Cart
      parameters:
      - description: cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/CartRequest'
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CartProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Cart
      tags:
      - Cart
  /cart/{id}:
    delete:
      description: Delete cart by id
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CartResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete cart
      tags:
      - Cart
    put:
      description: Update cart data (Admin Only)
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Cart
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/CartEditRequest'
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CartResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update cart
      tags:
      - Cart
  /login:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: User
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Register
      tags:
      - Authentication
  /product:
    get:
      description: Get all products data
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProductResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create New Product
      parameters:
      - description: product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/ProductRequest'
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Product
      tags:
      - Product
  /product/{id}:
    delete:
      description: Delete product by id
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete product
      tags:
      - Product
    get:
      description: Get product base on id parameters given (Admin Only)
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get product by id
      tags:
      - Product
    put:
      description: Update product data (Admin Only)
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/ProductEditRequest'
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update product
      tags:
      - Product
  /register:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: User
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Register
      tags:
      - Authentication
  /transaction:
    get:
      consumes:
      - application/json
      description: Create New Transaction
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TransactionProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Transaction
      tags:
      - Transaction
    post:
      consumes:
      - application/json
      description: Create New Transaction
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TransactionProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Transaction
      tags:
      - Transaction
  /user/:
    delete:
      description: Delete logged In self request user
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SuccessUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete self request user
      tags:
      - User
    get:
      description: get logged in request user
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: get self request user
      tags:
      - User
  /user/{id}:
    get:
      description: Get user base on id parameters given (Admin Only)
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get user by id
      tags:
      - User
  /user/admin/{id}:
    patch:
      description: Update user into admin by id (Admin Only)
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user to admin
      tags:
      - User
  /user/all:
    get:
      description: Get all users data
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get all users
      tags:
      - User
  /user/edit:
    put:
      description: Update self request user data
      parameters:
      - description: User
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/UserEditRequest'
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update self user
      tags:
      - User
  /user/edit/{id}:
    put:
      description: Update user data (Admin Only)
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/UserEditRequest'
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user
      tags:
      - User
swagger: "2.0"
