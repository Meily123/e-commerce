definitions:
  ErrorResponse:
    properties:
      code:
        type: integer
      err:
        type: string
    type: object
  LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  LoginSuccessResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      token:
        type: string
    type: object
  ProductRequest:
    properties:
      base_price:
        type: integer
      description:
        type: string
      name:
        type: string
      sell_price:
        type: integer
      stock:
        type: integer
    type: object
  UserRequest:
    properties:
      address:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - address
    - email
    - name
    - password
    - username
    type: object
  model.Product:
    properties:
      basePrice:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      sellPrice:
        type: integer
      stock:
        type: integer
      updatedAt:
        type: string
    type: object
  model.User:
    properties:
      address:
        type: string
      createdAt:
        type: integer
      email:
        type: string
      id:
        type: string
      isActive:
        type: boolean
      isAdmin:
        type: boolean
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: integer
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: User
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Register
      tags:
      - User
  /product:
    post:
      consumes:
      - application/json
      description: post create product
      parameters:
      - description: Product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
      summary: post product
      tags:
      - Product
  /product/{id}:
    get:
      consumes:
      - application/json
      description: get detail product
      parameters:
      - description: uuid
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
      summary: get product
      tags:
      - Product
  /register:
    post:
      consumes:
      - application/json
      description: Register User
      parameters:
      - description: User
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Register
      tags:
      - User
  /user/:
    delete:
      description: Delete logged In self request user
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Delete self request user
      tags:
      - User
    get:
      description: get logged in request user
      parameters:
      - description: token
        in: header
        name: Cookie
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginSuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: get self request user
      tags:
      - User
swagger: "2.0"
